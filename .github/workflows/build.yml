name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-build:
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
        
    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@v3
      with:
        name: stubcc_${{ matrix.platform }}
        path: target/release/stubcc

  codeql-test:
    strategy:
      matrix:
        cc: [ gcc, clang ]
        
    needs: cargo-build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download stubcc
      uses: actions/download-artifact@v3.0.0
      with:
        name: stubcc_ubuntu-latest
    - name: Install stubcc
      env:
        CC: ${{ runner.temp }}/${{ matrix.cc }}
      run: ls -lR ; install -m 755 -o root -g root stubcc/stubcc "$CC"
    - name: Install CodeQL CLI
      run: |
        wget --quiet https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.zip
        unzip codeql-linux64.zip
    - name: The Ultimate Test
      env:
        CC: ${{ runner.temp }}/${{ matrix.cc }}
      run: |
        echo 'int main(int argc, char *argv[]) { return 42; }' > 42.c
        codeql/codeql database create --language cpp --command "$CC -o 42 42.c" database
